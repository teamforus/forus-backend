    events {}
    http {
        include mime.types;
        default_type application/octet-stream;
        sendfile on;
        gzip off;

        upstream alb {
            server alb:80;
        }

        server {
            listen 80;
            server_name _;
            # Dev CORS (adjust as needed)

            # Server-level CORS (fallback for any location that doesn't override)
            add_header Access-Control-Allow-Origin "http://localhost:5000" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods "GET, POST, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "*" always;
            add_header Vary "Origin" always;

            location ~ ^/api/v1/platform/pre-checks/sessions/.+/events$ {
              proxy_pass http://alb;
              proxy_http_version 1.1;
              proxy_set_header Host $proxy_host;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_buffering off;
              chunked_transfer_encoding off;
              proxy_read_timeout 3600s;
              proxy_send_timeout 3600s;

              # CORS headers - FORCE toevoegen aan elke response
              proxy_hide_header Access-Control-Allow-Origin;
              proxy_hide_header Access-Control-Allow-Credentials;
              proxy_hide_header Access-Control-Allow-Methods;
              proxy_hide_header Access-Control-Allow-Headers;

              # If you are NOT using cookies in EventSource:
              add_header Access-Control-Allow-Origin "*" always;
              # If you ARE using cookies, replace the line above with:
              # add_header Access-Control-Allow-Origin "http://localhost:3000" always;
#               add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
#               add_header Access-Control-Allow-Credentials true always;
#               add_header Access-Control-Allow-Headers "*" always;
              add_header Vary "Origin" always;

              add_header Cache-Control "no-cache";
            }

            # API (explicit CORS + preflight)
            location /api/ {
              if ($request_method = OPTIONS) {
                return 204;
              }
              proxy_pass http://alb;
              proxy_http_version 1.1;
              proxy_set_header Host $host;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;

              # Ensure edge headers win if upstream sends its own
              proxy_hide_header Access-Control-Allow-Origin;
              proxy_hide_header Access-Control-Allow-Credentials;
              proxy_hide_header Access-Control-Allow-Methods;
              proxy_hide_header Access-Control-Allow-Headers;
             }

            # Generic preflight for non-/api paths (e.g., /sanctum/csrf-cookie)
            location / {
              if ($request_method = OPTIONS) {
                return 204;
              }
              proxy_pass http://alb;
              proxy_http_version 1.1;
              proxy_set_header Host $host;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }
